#!/bin/sh
pidof transmission-daemon >/dev/null || (transmission-daemon && notify-send -i "$PIX/transmission.svg" "Starting Transmission..." && sleep 3 && transmission-remote --blocklist-update)
transmission-remote -a "$@" && notify-send -i "$PIX/transmission.svg" "Transmission" "Torrent added"

# Inject trackers
transmission_host="http://localhost"
transmission_port="9091"
transmission_username="transmission"
transmission_password="transmission"

live_trackers_list_urls="
https://newtrackon.com/api/stable
https://trackerslist.com/best.txt
https://trackerslist.com/http.txt
https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt
"

generate_trackers_list () {
	for url in $live_trackers_list_urls; do tmp_trackers_list="${tmp_trackers_list}$(curl -sS "$url")\n"; done
	trackers_list=$(echo "$tmp_trackers_list" | awk '{for (i=1;i<=NF;i++) if (!a[$i]++) printf("%s%s",$i,FS)}{printf("\n")}' | xargs | tr ' ' '\n')
}

inject_trackers () {
	echo "$trackers_list" | while read -r tracker; do if [ -n "$tracker" ]; then curl --silent --fail --show-error --anyauth \
		--user ${transmission_username}:${transmission_password} --header "$qbt_cookie" "${transmission_host}:${transmission_port}/transmission/rpc/" \
		-d "{\"method\":\"torrent-set\",\"arguments\": {\"fields\":[\"ids\",\"trackerAdd\"],\"ids\":[$1],\"trackerAdd\":[\"$tracker\"]}}"; fi; done
}

get_cookie () {
	qbt_cookie=$(curl --silent --anyauth \
		--user ${transmission_username}:${transmission_password} ${transmission_host}:${transmission_port}/transmission/rpc/ \
		| sed 's/.*<code>//g;s/<\/code>.*//g')
}

get_torrent_list () {
	get_cookie
	torrent_list=$(curl --silent --anyauth \
		--user ${transmission_username}:${transmission_password} --header "$qbt_cookie" "${transmission_host}:${transmission_port}/transmission/rpc/" \
		-d "{\"method\":\"torrent-get\",\"arguments\": {\"fields\":[\"isPrivate\",\"id\",\"name\",\"hashString\",\"trackers\"]}}")
}

id=$(transmission-remote -l | awk '{print $1}' | sort -nr | head -n 1)
get_torrent_list
torrent_name=$(echo "$torrent_list" | jq --raw-output --argjson tosearch "$id" '. | .arguments | .torrents | .[] | select(.id == $tosearch) .name')
private=$(echo "$torrent_list" | jq --raw-output --arg tosearch "$torrent_name" '. | .arguments | .torrents | .[] | select(.name == "\($tosearch)") .isPrivate')
[ "$private" = true ] && exit || { [ -z "$trackers_list" ] && generate_trackers_list && inject_trackers "$id"; }
